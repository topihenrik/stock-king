name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install packages
        working-directory: frontend
        run: yarn install
      - name: Test frontend
        working-directory: frontend
        run: yarn test
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: StocKingTest
          POSTGRES_HOST_AUTH_METHOD: "trust"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: actions/setup-node@v4
        with:
          python-version: '3.8'
      - name: Initialize testing database
        working-directory: database
        run: |
          yarn install
          node init-test-db.js
      - name: Set environment variables
        working-directory: backend
        run: |
          touch .env.test
          echo DB_USER="runner" >> .env.test
          echo DB_PASSWORD="postgres" >> .env.test
          echo DB_HOST="localhost" >> .env.test
          echo DB_PORT="5432" >> .env.test
          echo DB_DATABASE="StocKingTest" >> .env.test
      - name: Install packages
        working-directory: backend
        run: |
          python3 --version
          pip install setuptools
          pip install -r requirements.txt
      - name: Test backend
        working-directory: backend
        run: python -m pytest
  discord_notify:
    name: Discord Notify
    runs-on: ubuntu-latest
    needs: [ frontend-tests, backend-tests ]
    if: ${{(github.event_name == 'push')}}
    steps:
      - uses: sarisia/actions-status-discord@v1.13.0
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "PR merged to main branch"
          color: 0x32cd32
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}
  deploy:
    name: Deploy Application
    needs: [frontend-tests, backend-tests]
    if: ${{ (github.event_name == 'push') && (!contains(toJson(github.event.commits.*.message), '#skip')) }}
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  tag_release:
    permissions: write-all
    name: Tag Release
    needs: [deploy]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.55.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true